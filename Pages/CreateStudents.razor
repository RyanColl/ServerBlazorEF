@page "/students/create"
@using ServerBlazorEF.Data
@using ServerBlazorEF.Models
@inject NavigationManager NavManager
@inject StudentService studentService
<h1>Add a Student</h1>
<NavLink href="/students" class="btn btn-success">Return</NavLink><br />

@if (students != null) // Insert form
{
    <EditForm Model="@student" OnValidSubmit="@Insert">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <InputText class="input-text" placeholder="First Name" id="firstName" @bind-Value="@student.FirstName" /><br />
        <InputText class="input-text" placeholder="Last Name" id="lastName" @bind-Value="@student.LastName" /><br />
        <InputText disabled="true" class="input-text" placeholder="Chosen School" id="school" @bind-Value="@student.School" /><br />
        <span class="dropdown">
            <button>Action</button>
            <label>
                <input type="checkbox">
                <ul>
                <li @onclick="() => ChooseSchool(me)">@me</li>
                <li @onclick="() => ChooseSchool(co)">@co</li>
                <li @onclick="() => ChooseSchool(nu)">@nu</li>
                <li @onclick="() => ChooseSchool(mi)">@mi</li>
                <li @onclick="() => ChooseSchool(sc)">@sc</li>
                <li @onclick="() => ChooseSchool(bu)">@bu</li>
                </ul>
            </label>
        </span>
        @* <InputText placeholder="School" id="school" @bind-Value="@student.School" /><br /> *@
        <button type="submit" class="btn btn-warning">Insert</button>
        <button type="button" @onclick="@ClearFields" class="btn btn-primary">Clear</button>
    </EditForm>
   
}


@code {
    List<Student> students; 
    string studentId;  string firstName;
    string lastName; string school;

    string me = "Medicine"; string co = "Computing";
    string nu = "Nursing"; string mi = "Mining";
    string sc = "Science"; string bu = "Business";
    Student student = new Student
    {
        FirstName = "",
        LastName = "",
        School = ""
    };
    protected void ChooseSchool(string school) {
        student.School = school;
    }
    protected override async Task OnInitializedAsync()
    {
        await load();
    }

    protected async Task load()
    {
        students = await studentService.GetStudentsAsync();
    }

    protected async Task Insert()
    {
        await studentService.InsertStudentAsync(student);
        await load();
        NavManager.NavigateTo("/students");
    }

    protected void ClearFields()
    {
        student.School = "";
        student.FirstName = "";
        student.LastName = "";
    }

}
