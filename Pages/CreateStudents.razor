@page "/students/create"
@using ServerBlazorEF.Data
@using ServerBlazorEF.Models
@inject NavigationManager NavManager
@inject StudentService studentService
<h1>Add a Student</h1>
<NavLink href="/students" class="btn btn-success">Return</NavLink><br />

@if (students != null) // Insert form
{
    <EditForm Model="@student" OnValidSubmit="@Insert">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <InputText placeholder="First Name" id="firstName" @bind-Value="@student.FirstName" /><br />
        <InputText placeholder="Last Name" id="lastName" @bind-Value="@student.LastName" /><br />
        <InputText placeholder="School" id="school" @bind-Value="@student.School" /><br />
        <button type="submit" class="btn btn-warning">Insert</button>
        <button type="button" @onclick="@ClearFields" class="btn btn-primary">Clear</button>
    </EditForm>
   
}


@code {
    List<Student> students; 
    string studentId;
    string firstName;
    string lastName;
    string school;
    Student student = new Student
    {
        StudentId = Guid.NewGuid().ToString(),
        FirstName = "",
        LastName = "",
        School = ""
    };

    protected override async Task OnInitializedAsync()
    {
        await load();
    }

    protected async Task load()
    {
        students = await studentService.GetStudentsAsync();
    }

    protected async Task Insert()
    {
        await studentService.InsertStudentAsync(student);
        await load();
        NavManager.NavigateTo("/students");
    }

    protected void ClearFields()
    {
        student.School = "";
        student.FirstName = "";
        student.LastName = "";
    }

}
